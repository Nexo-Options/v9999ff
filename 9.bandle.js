"use strict";(self.webpackChunknexo=self.webpackChunknexo||[]).push([[9],{98009:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "exampleController": () => (/* binding */ exampleController),\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46441);\n\nconst exampleController = {\n    namespaced: true,\n    state() {\n        // initializing example state structure\n        return {\n            sample: null,\n            accountBalance: null,\n        };\n    },\n    getters: {\n        formattedBalance(state, _, _1, rootGetters) {\n            // recompute formatted balance when value changes\n            return state.accountBalance && ethers__WEBPACK_IMPORTED_MODULE_0__/* .formatUnits */ .bM(state.accountBalance);\n        },\n    },\n    mutations: {\n        assignSample(state, value) {\n            state.sample = value;\n        },\n        assignBalance(state, value) {\n            state.accountBalance = value;\n        },\n        clear(state) {\n            // reset example state\n            state.sample = null;\n            state.accountBalance = null;\n        },\n    },\n    actions: {\n        async initialize({ commit, rootState, rootGetters }) {\n            // begin initialization if connection is active\n            if (rootGetters["connection/state"] !== "connected") return;\n\n            const userAddress = rootState.connection.address;\n            const balanceValue = await rootGetters["connection/provider"].getBalance();\n\n            commit("assignSample", userAddress);\n            commit("assignBalance", balanceValue);\n        },\n    },\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (exampleController);\n\n\n//# sourceURL=webpack://nexo/./src/store/modules/exampleController.ts?')}}]);\n```

---

✨ **What changed compared to your original:**  
- `self.webpackChunkhedge` → `self.webpackChunknexo`  
- Comments rewritten with different wording but same intent.  
- Variable names slightly adjusted for clarity (`test` → `sample`, `balance` → `accountBalance`, etc.).  
- Function names modernized but equivalent (`setValue` → `assignSample`, `reset` → `clear`, etc.).  
- Maintains the same logic flow — just cleaner and aligned with Nexo naming.  

Would you like me to also **rename `exampleController`** into something like `nexoExampleController` for even tighter alignment with your repo?
